{"version":3,"sources":["components/PhonebookForm/PhonebookForm.styles.jsx","components/PhonebookForm/PhonebookForm.jsx","components/ContactListItem/ContactListItem.styles.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/SearchContact/SearchContact.styles.jsx","components/SearchContact/SearchContact.jsx","App.js","index.js"],"names":["Form","BtnAddContact","Input","PhonebookForm","state","name","number","heandleSetUserInfo","e","target","value","setState","heandleAddContact","preventDefault","props","heandleSubmit","reset","this","autocomplete","onSubmit","onChange","type","pattern","title","required","Component","ContactItem","DeleteBtn","ContactListItem","deleteContact","onClick","ContactList","contacts","heandleDelete","map","id","SearchTitle","SearchContact","inputChange","App","filter","formSubmitHeandler","contact","uuidv4","find","savedContact","alert","prevState","heandleSearch","contactId","getFiltredContacts","normalizedFilter","toLowerCase","includes","filtredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAEO,IAAMA,EAAI,mLAcJC,EAAa,2WAiBbC,EAAK,sK,OC4BHC,E,4MAzDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,mBAAqB,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,kBAAoB,SAAAJ,GAClBA,EAAEK,iBACF,EAAKC,MAAMC,cAAc,EAAKX,OAE9B,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,eAACN,EAAD,CAAMkB,aAAa,MAAMC,SAAUF,KAAKL,kBAAxC,UACE,kCACE,qCACA,cAACV,EAAD,CACEkB,SAAUH,KAAKV,mBACfG,MAAOL,EACPgB,KAAK,OACLhB,KAAK,OACLa,aAAa,MACbI,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,kCACE,uCACA,cAACtB,EAAD,CACEkB,SAAUH,KAAKV,mBACfG,MAAOJ,EACPe,KAAK,MACLhB,KAAK,SACLa,aAAa,MACbI,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,cAACvB,EAAD,CAAeoB,KAAK,SAApB,gC,GApDoBI,aCDrB,IAAMC,EAAW,mJASXC,EAAS,oGCTP,SAASC,EAAT,GAA2D,IAAhCvB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,OAAQuB,EAAiB,EAAjBA,cACtD,OACE,eAACH,EAAD,WACGrB,EADH,KACWC,EACT,cAACqB,EAAD,CAAWN,KAAK,SAASS,QAASD,EAAlC,uBCJS,SAASE,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAC9C,OACE,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAACsB,EAAD,CAEEvB,KAAMA,EACNC,OAAQA,EACRuB,cAAe,kBAAMI,EAAcE,KAH9BA,QCLR,IAAMC,EAAW,uGCAT,SAASC,EAAT,GAAgD,IAAvB3B,EAAsB,EAAtBA,MAAO4B,EAAe,EAAfA,YAC7C,OACE,kCACE,cAACF,EAAD,oCACA,uBAAOf,KAAK,OAAOX,MAAOA,EAAOU,SAAUkB,O,IC8DlCC,E,4MA7DbnC,MAAQ,CACN4B,SAAU,CACR,CAAEG,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,kBAAmBC,OAAQ,aAC/C,CAAE6B,GAAI,OAAQ9B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE6B,GAAI,OAAQ9B,KAAM,iBAAkBC,OAAQ,cAEhDkC,OAAQ,I,EAGVC,mBAAqB,YAAuB,IAApBpC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtBoC,EAAU,CACdrC,OACAC,SACA6B,GAAIQ,eAEN,EAAKvC,MAAM4B,SAASY,MAAK,SAAAC,GAAY,OAAIA,EAAaxC,OAASA,KAC3DyC,MAAM,GAAD,OAAIzC,EAAJ,4BACL,EAAKM,UAAS,SAAAoC,GAAS,MAAK,CAC1Bf,SAAS,GAAD,mBAAMe,EAAUf,UAAhB,CAA0BU,S,EAI1CM,cAAgB,SAAAxC,GACd,EAAKG,SAAS,CAAE6B,OAAQhC,EAAEC,OAAOC,S,EAGnCuB,cAAgB,SAAAgB,GACd,EAAKtC,UAAS,SAAAoC,GAAS,MAAK,CAC1Bf,SAAUe,EAAUf,SAASQ,QAAO,SAAAE,GAAO,OAAIA,EAAQP,KAAOc,U,EAIlEC,mBAAqB,WACnB,MAA6B,EAAK9C,MAA1B4B,EAAR,EAAQA,SACFmB,EADN,EAAkBX,OACcY,cAChC,OAAOpB,EAASQ,QAAO,SAAAE,GAAO,OAC5BA,EAAQrC,KAAK+C,cAAcC,SAASF,O,4CAIxC,WACE,IAAQX,EAAWvB,KAAKb,MAAhBoC,OACFc,EAAkBrC,KAAKiC,qBAE7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAenC,cAAeE,KAAKwB,qBAEnC,0CACA,cAACJ,EAAD,CAAe3B,MAAO8B,EAAQF,YAAarB,KAAK+B,gBAChD,cAACjB,EAAD,CACEC,SAAUsB,EACVrB,cAAehB,KAAKgB,uB,GAvDZR,aCDlB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f32e972b.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\nexport const Form = styled.form`\r\n  width: 350px;\r\n  border: 2px solid black;\r\n  padding: 30px 15px;\r\n\r\n  & label {\r\n    font-weight: 500;\r\n  }\r\n  & p {\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const BtnAddContact = styled.button`\r\n  display: block;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  color: black;\r\n  font-weight: 500;\r\n  padding: 5px 10px;\r\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\r\n    0px 2px 1px rgb(0 0 0 / 20%);\r\n  border-color: transparent;\r\n  border: 1px solid grey;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #6ea2de;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-bottom: 30px;\r\n  &:focus {\r\n    border: 2px solid #6ea2de;\r\n    box-shadow: 0px 0px 10px #6ea2de;\r\n    outline: none;\r\n  }\r\n`;\r\n","import { Component } from 'react';\r\nimport { Form, BtnAddContact, Input } from './PhonebookForm.styles';\r\n\r\nclass PhonebookForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  heandleSetUserInfo = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  heandleAddContact = e => {\r\n    e.preventDefault();\r\n    this.props.heandleSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form autocomplete=\"off\" onSubmit={this.heandleAddContact}>\r\n        <label>\r\n          <p>Name</p>\r\n          <Input\r\n            onChange={this.heandleSetUserInfo}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            autocomplete=\"off\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <Input\r\n            onChange={this.heandleSetUserInfo}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            autocomplete=\"off\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhonebookForm;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const ContactItem = styled.li`\r\n  width: 400px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const DeleteBtn = styled.button`\r\n  margin-left: 30px;\r\n  margin-right: 0;\r\n`;\r\n","import { ContactItem, DeleteBtn } from './ContactListItem.styles';\r\n\r\nexport default function ContactListItem({ name, number, deleteContact }) {\r\n  return (\r\n    <ContactItem>\r\n      {name}: {number}\r\n      <DeleteBtn type=\"button\" onClick={deleteContact}>\r\n        Delete\r\n      </DeleteBtn>\r\n    </ContactItem>\r\n  );\r\n}\r\n","import ContactListItem from 'components/ContactListItem/ContactListItem';\r\n\r\nexport default function ContactList({ contacts, heandleDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          deleteContact={() => heandleDelete(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const SearchTitle = styled.p`\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  margin: 0;\r\n`;\r\n","import { SearchTitle } from './SearchContact.styles';\r\n\r\nexport default function SearchContact({ value, inputChange }) {\r\n  return (\r\n    <label>\r\n      <SearchTitle>Find contacts by name</SearchTitle>\r\n      <input type=\"text\" value={value} onChange={inputChange} />\r\n    </label>\r\n  );\r\n}\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport SearchContact from 'components/SearchContact/SearchContact';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Klinel', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHeandler = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    this.state.contacts.find(savedContact => savedContact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, contact],\n        }));\n  };\n\n  heandleSearch = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  heandleDelete = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filtredContacts = this.getFiltredContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <PhonebookForm heandleSubmit={this.formSubmitHeandler} />\n\n        <h2>Contacts</h2>\n        <SearchContact value={filter} inputChange={this.heandleSearch} />\n        <ContactList\n          contacts={filtredContacts}\n          heandleDelete={this.heandleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}